---
# tasks file for install-check-mk-server
- name: Set distro-specific variables | INCLUDE_VARS
  include_vars:
    file: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution_release }}.{{ ansible_distribution }}.yml"
    - "{{ ansible_distribution }}.{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "default.yml"
  tags:
    - install-check-mk-server
- name: Install pre-requisites | APT
  apt:
    name: "{{ install_check_mk_server_prereqs }}"
    state: present
    update_cache: yes
  when: ansible_pkg_mgr == "apt"
  tags:
    - install-check-mk-server
- name: Install pre-requisites | YUM
  yum:
    name: "{{ install_check_mk_server_prereqs }}"
    state: present
    update_cache: yes
  when: ansible_pkg_mgr == "yum"
  tags:
    - install-check-mk-server
- name: Install pre-requisites | DNF
  dnf:
    enablerepo: PowerTools
    name: "{{ install_check_mk_server_prereqs }}"
    state: present
    update_cache: yes
  when: ansible_pkg_mgr == "dnf"
  tags:
    - install-check-mk-server
- name: Import a key from a URL | APT_KEY
  apt_key:
    url: "{{ install_check_mk_server_key_url }}"
    state: present
  when: ansible_pkg_mgr == "apt"
  tags:
    - install-check-mk-server
- name: Import a key from a URL | RPM_KEY
  rpm_key:
    key: "{{ install_check_mk_server_key_url }}"
    state: present
  when: ansible_pkg_mgr != "apt"
  tags:
    - install-check-mk-server
- name: Update cache | APT
  apt:
    cache_valid_time: 3600
    update_cache: yes
  when: ansible_pkg_mgr == "apt"
  tags:
    - install-check-mk-server
- name: Make sure the man8 folder exists | FILE
  file:
    path: /usr/share/man/man8
    state: directory
    mode: 0755
  tags:
    - install-check-mk-server
- name: Test if Check_MK package is on disk already | STAT
  stat:
    path: "/opt/{{ install_check_mk_server_source }}"
  register: install_check_mk_server_package
  tags:
    - install-check-mk-server
- name: Download Check_MK RAW | GET_URL
  get_url:
    dest: /opt
    mode: 0755
    url: "{{ install_check_mk_server_source_url }}"
  when: not install_check_mk_server_package.stat.exists
  tags:
    - install-check-mk-server
- name: Install Check_MK RAW | APT
  apt:
    deb: "/opt/{{ install_check_mk_server_source }}"
    state: present
  when: ansible_pkg_mgr == "apt"
  tags:
    - install-check-mk-server
- name: Install Check_MK RAW | YUM
  yum:
    name: "/opt/{{ install_check_mk_server_source }}"
    state: present
  when: ansible_pkg_mgr == "yum"
  tags:
    - install-check-mk-server
- name: Install Check_MK RAW | DNF
  dnf:
    name: "/opt/{{ install_check_mk_server_source }}"
    state: present
  when: ansible_pkg_mgr == "dnf"
  tags:
    - install-check-mk-server
- name: Setup OMD | COMMAND
  command: omd setup
  args:
    creates: /opt/omd
  tags:
    - install-check-mk-server
- name: Create OMD site | COMMAND
  command: omd create {{ install_check_mk_server_site }}
  args:
    creates: /opt/omd/sites/{{ install_check_mk_server_site }}
  register: install_check_mk_server_omd_create
  tags:
    - install-check-mk-server
- name: Log captured creation task | COPY
  copy:
    content: "{{ install_check_mk_server_omd_create }}"
    dest: /opt/omd/sites/{{ install_check_mk_server_site }}/omd-create.log
    group: "{{ install_check_mk_server_site }}"
    owner: "{{ install_check_mk_server_site }}"
    mode: 0600
    force: no
  when: install_check_mk_server_adminpw is undefined
  tags:
    - install-check-mk-server
- name: Change OMD site admin password | HTPASSWD
  htpasswd:
   path: /opt/omd/sites/{{ install_check_mk_server_site }}/etc/htpasswd
   name: cmkadmin
   password: "{{ install_check_mk_server_adminpw }}"
  become: true
  become_user: "{{ install_check_mk_server_site }}"
  vars:
    ansible_ssh_pipelining: yes
  when: install_check_mk_server_adminpw is defined
  tags:
    - install-check-mk-server
- name: Start OMD site | COMMAND
  command: omd start {{ install_check_mk_server_site }}
  args:
    creates: /opt/omd/sites/{{ install_check_mk_server_site }}/tmp/apache/run/apache.pid
  tags:
    - install-check-mk-server
- name: Start Apache2 | SERVICE
  service:
    name: "{{ install_check_mk_server_web_service }}"
    state: started
    enabled: yes
  tags:
    - install-check-mk-server
...